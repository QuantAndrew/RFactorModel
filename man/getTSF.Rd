% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct01_frameBuildingFuncs.R
\name{getTSF}
\alias{getTSF}
\alias{getRawFactor}
\alias{gf_lcfs}
\title{getTSF}
\usage{
getTSF(TS, factorFun, factorPar = list(), factorDir = 1,
  factorOutlier = 3, factorStd = "none", factorNA = "na",
  sectorAttr = defaultSectorAttr(), FactorList, splitbin = 100000L)

getRawFactor(TS, factorFun, factorPar)

gf_lcfs(TS, factorID)
}
\arguments{
\item{TS}{a \bold{TS} or \bold{TSR} objectobject(See detail in \code{\link{getTS}} and  \code{\link{getTSR}})}

\item{factorFun}{a character string naming the function to get the factor scores.}

\item{factorPar}{either a list or a character string, containing the parameters of the \code{factorFun}. If a character string, parameters are seprated by commas and the character parameters must quoted by  "\""s, see examples for details.}

\item{factorDir}{a integer,should be 1 or -1 (1 for the positive factor,-1 for the negative one).}

\item{factorOutlier}{a numeric value of standard deviations, e.g. 10 means that factor score larger or smaller than ten times the standard deviation will be removed}

\item{factorStd}{a character string, indicating the standardizing pattern of the factor score,could be one of "none"(no scaling),"norm"(scaling to 0 mean and 1 stdev),"sectorNe"(scaling to 0 mean and 1 stdev in each sector).}

\item{factorNA}{a character string, indicating the method to deal with the missing value of the factorscore, could be one of "na"(default,keeping the missing value as it is),"mean","median","max","min".}

\item{splitbin}{a integer or a charactor string of 'year','month',...}
}
\value{
given a \bold{TS} object,return a \bold{TSF} object,a dataframe containing cols:
  \itemize{
  \item date: the rebalance dates, with \code{Date} class
  \item stockID: the stockID contained in the index or BK
  \item factorscore:the factor score of the stocks on the  rebalancing date
  \item sector(optional):the sector of a stock
  }
  given a \bold{TSR} object,return a \bold{TSFR} object,a dataframe containing cols:
  \itemize{ 
  \item stockID: the stockID contained in the index or BK
  \item date: the rebalance dates, with \code{Date} class
  \item factorscore:the factor score of the stocks on the  rebalancing date  
  \item date_end(optional): the next rebalance dates, with \code{Date} class
  \item periodrtn:the period rtn between the rebalance date and the date_end
  \item sector(optional):the sector of a stock
  }

\code{getRawFactor} return a \bold{TSF} object, with 'raw' factorscore.
}
\description{
get the \bold{TSF} ('time-stock-factor') or \bold{TSFR}('time-stock-factor-rtn') object,by adding the factor score to a \bold{TS} or \bold{TSR} object.If necessary,cleaning and stardizing the factor score.
}
\details{
\code{getRawFactor} return a \bold{TSF} object, with 'raw' factorscore, which has not been standardized and not been deal with missing values and outliers. Function \code{getRawFactor} is often called intermediately by function \code{getTSF}.
}
\examples{
# -- get the TSF step by step --

# - get a TSF object
RebDates <- getRebDates(as.Date('2011-03-17'),as.Date('2012-04-17'),'month')
TS <- getTS(RebDates,'EI000300')
factorFun <- "gf_demo"
factorPar <- list(mean=0,sd=1)
TSF <- getTSF(TS,factorFun,factorPar)
# - get a TSFR object
TSR <- getTSR(TS)
TSFR <- getTSF(TSR)

# -- you can also get the TSF through the modelPar object directively --
modelPar <- modelPar.default()
modelPar <- modelPar.factor(modelPar,factorFun="gf_demo",factorPar=list(0,1),factorOutlier=10,factorStd="sectorNe")
TSF <- Model.TSF(modelPar)

# -- factorPar as character string
TSF2 <- getTSF(TS,"gf_demo","0,1")
TSF2 <- getTSF(TS,"gf_demo","mean=0,sd=1")
TSF2 <- getTSF(TS,"gf.foo","2,3")
TSF2 <- getTSF(TS,"gf.bar","20,\\"IF00\\"")
# -- get 'raw' factorscore
TSF_raw <- getRawFactor(TS,"gf.pct_chg_per","20")
}
\seealso{
Other frame building functions: \code{\link{getRebDates}},
  \code{\link{getTSR}}, \code{\link{getTS}}
}
\author{
Ruifei.Yin
}
